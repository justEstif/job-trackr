generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  APPLIED
  INTERVIEWING
  DENIED
  DECLINED
  ARCHIVED
}

model Job {
  id String @id @default(cuid())

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // details
  title       String
  interest    Int
  status      Status @default(APPLIED)
  description String
  source      String

  // applicant
  user    AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)
  user_id String

  // company
  company    Company @relation(references: [id], fields: [company_id], onDelete: Cascade)
  company_id String

  // notifications
  notifications Notification[]

  @@map("job")
}

model Company {
  id String @id @default(cuid())

  name      String
  image_url String?
  user      AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)
  user_id   String
  jobs      Job[]

  @@unique([user_id, name], name: "companyIdentifier")
  @@map("company")
}

model Notification {
  id          String   @id @default(cuid())
  name        String
  notify_date DateTime @default(dbgenerated("NOW() + interval '14 day'"))

  job_id String
  job    Job    @relation(references: [id], fields: [job_id], onDelete: Cascade)

  @@map("notification")
}

model AuthUser {
  id           String        @id @unique
  auth_session AuthSession[]
  auth_key     AuthKey[]

  username  String    @unique
  jobs      Job[]
  companies Company[]

  @@map("auth_user")
}

model AuthSession {
  id             String   @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String   @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}
